// install
@inline
def reference[d in Definition](d2 in Definition) =
    regex_match_all["\\b\\w+\\b",
        // d.text
        substring[d.text, 4+num_chars[d.name], num_chars[d.text]]
        ](_, r)
    from r
    where  d2.name = r

@inline
def non_stdlib_ref(a,b) {
    reference(a,b)
    and not starts_with(a.file, "rel/")
    and not starts_with(b.file, "rel/")
}

// module all_connections
//     def edge = d.name, d.reference.name from d
// end

// def display_all_connections = graphviz[all_connections]

def connections = :edge, {
    d.name, d2.name
    from d, d2 in d.non_stdlib_ref
}
def display_connections = graphviz[connections]
